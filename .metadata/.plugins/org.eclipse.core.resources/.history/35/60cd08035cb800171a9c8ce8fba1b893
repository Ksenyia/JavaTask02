package by.tc.task02.dao.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import by.tc.task02.dao.EntityDAO;
import by.tc.task02.entity.Entity;

public class EntityDAOImpl implements EntityDAO {
	
	protected String getName(Matcher matcher){
		String name = null;
    	String patternForName="([a-zA-Z-0-9:_]+)";
		Pattern pattern2 = Pattern.compile(patternForName);
		Matcher matcher2 = pattern2.matcher(matcher.group());
		if(matcher2.find()){
			System.out.println(matcher2.group());
			name = matcher2.group();
		}
		return name;
	}
	protected Entity getEntity(BufferedReader bufferedReader){
		Entity entity = new Entity();
		try {   
			String line = "";
			while ((line = bufferedReader.readLine()) != null) {
				String beginOfOpeningTag = "(<([a-zA-Z_:]+).*>)";
				String beginOfCloseingTag = "(</([a-zA-Z_:]+).*>)";
				Pattern pattern = Pattern.compile(beginOfOpeningTag);
		    	Matcher matcher = pattern.matcher(line);
				while(matcher.find()){
					if(!getName(matcher).isEmpty()){
					String name = getName(matcher);
					System.out.println(getName(matcher));
					entity.setName(name);
					Pattern pattern2 = Pattern.compile(beginOfOpeningTag);
			    	Matcher matcher2 = pattern.matcher(line);
					Entity newEntity = getEntity(bufferedReader);
					entity.setNewEntity(newEntity);
					}
				}
			}
		} catch (IOException e){
			 e.printStackTrace();
			 entity = null;
		}  
		return entity;
	}

	public Entity parse() {
		Entity entity = null;
		String file = "src"+File.separator +"main" +File.separator +"resources"+ File.separator + "resource.xml";
		BufferedReader bufferedReader = null;
		try {   
			bufferedReader = new BufferedReader(new FileReader(file));
			entity = getEntity(bufferedReader);

		} catch (IOException e){
			 e.printStackTrace();
		} finally {
			if (bufferedReader != null) {
				try {
					bufferedReader.close();
				} catch (IOException e) {    
					e.printStackTrace();
				}   
			}  
		}
		return entity;
	}

}
